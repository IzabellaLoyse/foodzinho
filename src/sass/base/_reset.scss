/* stylelint-disable no-descending-specificity */
/* stylelint-disable property-no-vendor-prefix */
@use '../abstract/variables';
@use '../abstract/functions';
@use '../abstract/breakpoint';
@use 'sass:map';

html {
  box-sizing: border-box;
  overflow: hidden;
  overflow-y: scroll;
  scroll-behavior: smooth;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*,
*::before,
*::after {
  outline-offset: 0.25rem;
}

body {
  background-color: map.get(variables.$accessible-colors, 'main-color');
  font-family: variables.$global-font-nunito;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.5;
}

p,
li,
h2,
h3,
h4 {
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  margin: 0;
  overflow-wrap: break-word;
}

h1,
h2,
h3 {
  font-family: variables.$global-font-poppins;
  font-weight: map.get(variables.$font-weight, 'semi-bold');
}

h1 {
  font-size: map.get(variables.$font-size, '2xl');
}

h2 {
  font-size: map.get(variables.$font-size, 'xl');
}

h3 {
  font-size: map.get(variables.$font-size, 'lg');
}

li > a {
  @include breakpoint.breakpoint-up(map.get(breakpoint.$breakpoints, 'lg')) {
    display: initial;
  }
}

a {
  display: inherit;
  text-decoration: none;
  width: 100%;

  &:focus,
  &:hover,
  &:visited {
    border: 1px dashed map.get(variables.$accessible-colors, 'third-color');
  }

  &:active {
    color: map.get(variables.$accessible-colors, 'fourth-color');
  }
}

li {
  list-style: none;
}

label {
  cursor: pointer;
}

img {
  max-width: 100%;
}

img[width][height] {
  height: auto;
}

img[src$='.svg'] {
  height: auto;
  max-width: none;
  width: 100%;
}
